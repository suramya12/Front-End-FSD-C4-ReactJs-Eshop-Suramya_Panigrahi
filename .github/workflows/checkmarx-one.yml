name: Checkmarx One Scan
on:
  push:
    branches:
      - main
      - master
      - dev

permissions:
  security-events: write
  contents: read

jobs:
  checkmarx-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkmarx AST Github Action
        uses: Checkmarx/ast-github-action@2.0.23
        with:
          base_uri: https://ast.checkmarx.net
          cx_tenant: sonype-01
          cx_client_id: Test-Github-Suramya
          cx_client_secret: kAmCLxJ69sKmdw01fibmSoxmAow9giZC
          project_name: ${{ github.repository }}
          branch: ${{ github.ref }}
          additional_params: --report-format sarif --output-path .

      - name: Install jq and Python
        run: |
          sudo apt-get update
          sudo apt-get install -y jq python3

      - name: Retrieve Scan ID
        id: get-scan-id
        run: |
          SCAN_ID=$(./cx scan list --limit 1 --sort -created | jq -r '.[0].id')
          echo "SCAN_ID=${SCAN_ID}" >> $GITHUB_ENV

      - name: Retrieve and Filter Results
        run: |
          ./cx results show --scan-id ${{ env.SCAN_ID }} --report-format sarif --output-name cx_result.sarif --output-path .
          python3 << 'EOF'
          import json
          def filter_sarif(input_file, output_file):
              with open(input_file, 'r') as file:
                  sarif = json.load(file)
          
              filtered_runs = []
              for run in sarif['runs']:
                  filtered_results = [result for result in run['results'] if not result['ruleId'].startswith('Cx')]
                  run['results'] = filtered_results
                  filtered_runs.append(run)
          
              sarif['runs'] = filtered_runs
          
              with open(output_file, 'w') as file:
                  json.dump(sarif, file, indent=2)
          
          filter_sarif('cx_result.sarif', 'filtered_cx_result.sarif')
          EOF

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: filtered_cx_result.sarif
